import matplotlib.pyplot as plt
import numpy as np

parameters = [[0.7, 0.8999999999999999, 1.1, 1.3, 1.5], [-1.0, -0.5, 0.0, 0.5, 1.0], [0.7, 0.8, 0.9]]
optimal_fees = [[[0.026798073681136254, 0.03269116833280147, 0.046998996005887826], [0.03375176790259808, 0.04674784780011286, 0.03809173728975499], [0.03457317626548741, 0.0382584045238855, 0.04726638190445798], [0.0361319095222899, 0.060369646180426, 0.061841595476114494], [0.06009152991552148, 0.06740883166719853, 0.07084957285668697]], [[0.0421022668995366, 0.05913666492422208, 0.059715100474518897], [0.05521419504100678, 0.0762501412476599, 0.07139226920863585], [0.051838146519104455, 0.0747999966220643, 0.06740883166719853], [0.055020801421762244, 0.06887490024162703, 0.06441958601107912], [0.07588131792607125, 0.07458109704293202, 0.06200826306004025]], [[0.06207446959929257, 0.06930504721245889, 0.08198404523885505], [0.06707675689487061, 0.06992993721287889, 0.07729827993350274], [0.0640893261674698, 0.06625338619924143, 0.07172511912960798], [0.07660855498244842, 0.07394523612262581, 0.08542478642834349], [0.06595494041045259, 0.07503799074706362, 0.07763842915253565]], [[0.07641680904777101, 0.07607619164856146, 0.07818060569804852], [0.08542478642834349, 0.09361736529212264, 0.061841595476114494], [0.08542478642834349, 0.06278983717105165, 0.07658347684788212], [0.08755128142993909, 0.08523237674409338, 0.06735329927102571], [0.08270013931323478, 0.080394454058747, 0.07041645146971968]], [[0.07698783127874857, 0.07782045945265517, 0.0757381965155289], [0.06470632546394495, 0.08885570212757923, 0.0751830006711448], [0.08542478642834349, 0.07170023391956667, 0.09616198683490837], [0.08608415395287941, 0.07641680904777101, 0.07641680904777101], [0.07414668724988627, 0.09009599738777128, 0.07813145840471823]]]

x = parameters[0]
y = parameters[2]
drift_index = 4

x, y = np.mgrid[slice(x[0], x[-1] + (1.5-0.7)/4, (1.5-0.7)/4), slice(y[0], y[-1] + (0.9-0.7)/2, (0.9-0.7)/2)]

z = x.copy() 

print(optimal_fees[0][4][0])

for i in range(len(z)):
    for j in range(len(z[i])):
        z[i,j] = optimal_fees[i][drift_index][j]

z_min, z_max = np.abs(z).min(), np.abs(z).max()

c = plt.imshow(z, cmap ='Blues', vmin = z_min, vmax = z_max,
                 extent =[x.min(), x.max(), y.min(), y.max()],
                    interpolation ='nearest', origin ='lower', aspect='auto')

plt.colorbar(c)

plt.xlabel("Volatility")
plt.ylabel("Initial price as fraction of strike")

plt.title("Optimal fees for different parameters \n" + r'Drift = 1, 120 days, 8H $d\tau$')
plt.show()